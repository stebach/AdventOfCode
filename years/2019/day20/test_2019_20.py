import solve_2019_20 as subject
import pytest

@pytest.fixture
def puzzle_input():
    return [
        '         A           ',
        '         A           ',
        '  #######.#########  ',
        '  #######.........#  ',
        '  #######.#######.#  ',
        '  #######.#######.#  ',
        '  #######.#######.#  ',
        '  #####  B    ###.#  ',
        'BC...##  C    ###.#  ',
        '  ##.##       ###.#  ',
        '  ##...DE  F  ###.#  ',
        '  #####    G  ###.#  ',
        '  #########.#####.#  ',
        'DE..#######...###.#  ',
        '  #.#########.###.#  ',
        'FG..#########.....#  ',
        '  ###########.#####  ',
        '             Z       ',
        '             Z       '
    ]

@pytest.fixture
def puzzle_input2():
    return [
        '                   A               ',
        '                   A               ',
        '  #################.#############  ',
        '  #.#...#...................#.#.#  ',
        '  #.#.#.###.###.###.#########.#.#  ',
        '  #.#.#.......#...#.....#.#.#...#  ',
        '  #.#########.###.#####.#.#.###.#  ',
        '  #.............#.#.....#.......#  ',
        '  ###.###########.###.#####.#.#.#  ',
        '  #.....#        A   C    #.#.#.#  ',
        '  #######        S   P    #####.#  ',
        '  #.#...#                 #......VT',
        '  #.#.#.#                 #.#####  ',
        '  #...#.#               YN....#.#  ',
        '  #.###.#                 #####.#  ',
        'DI....#.#                 #.....#  ',
        '  #####.#                 #.###.#  ',
        'ZZ......#               QG....#..AS',
        '  ###.###                 #######  ',
        'JO..#.#.#                 #.....#  ',
        '  #.#.#.#                 ###.#.#  ',
        '  #...#..DI             BU....#..LF',
        '  #####.#                 #.#####  ',
        'YN......#               VT..#....QG',
        '  #.###.#                 #.###.#  ',
        '  #.#...#                 #.....#  ',
        '  ###.###    J L     J    #.#.###  ',
        '  #.....#    O F     P    #.#...#  ',
        '  #.###.#####.#.#####.#####.###.#  ',
        '  #...#.#.#...#.....#.....#.#...#  ',
        '  #.#####.###.###.#.#.#########.#  ',
        '  #...#.#.....#...#.#.#.#.....#.#  ',
        '  #.###.#####.###.###.#.#.#######  ',
        '  #.#.........#...#.............#  ',
        '  #########.###.###.#############  ',
        '           B   J   C               ',
        '           U   P   P               '
    ]

@pytest.fixture
def puzzle_input3():
    return [
        '             Z L X W       C                 ',
        '             Z P Q B       K                 ',
        '  ###########.#.#.#.#######.###############  ',
        '  #...#.......#.#.......#.#.......#.#.#...#  ',
        '  ###.#.#.#.#.#.#.#.###.#.#.#######.#.#.###  ',
        '  #.#...#.#.#...#.#.#...#...#...#.#.......#  ',
        '  #.###.#######.###.###.#.###.###.#.#######  ',
        '  #...#.......#.#...#...#.............#...#  ',
        '  #.#########.#######.#.#######.#######.###  ',
        '  #...#.#    F       R I       Z    #.#.#.#  ',
        '  #.###.#    D       E C       H    #.#.#.#  ',
        '  #.#...#                           #...#.#  ',
        '  #.###.#                           #.###.#  ',
        '  #.#....OA                       WB..#.#..ZH',
        '  #.###.#                           #.#.#.#  ',
        'CJ......#                           #.....#  ',
        '  #######                           #######  ',
        '  #.#....CK                         #......IC',
        '  #.###.#                           #.###.#  ',
        '  #.....#                           #...#.#  ',
        '  ###.###                           #.#.#.#  ',
        'XF....#.#                         RF..#.#.#  ',
        '  #####.#                           #######  ',
        '  #......CJ                       NM..#...#  ',
        '  ###.#.#                           #.###.#  ',
        'RE....#.#                           #......RF',
        '  ###.###        X   X       L      #.#.#.#  ',
        '  #.....#        F   Q       P      #.#.#.#  ',
        '  ###.###########.###.#######.#########.###  ',
        '  #.....#...#.....#.......#...#.....#.#...#  ',
        '  #####.#.###.#######.#######.###.###.#.#.#  ',
        '  #.......#.......#.#.#.#.#...#...#...#.#.#  ',
        '  #####.###.#####.#.#.#.#.###.###.#.###.###  ',
        '  #.......#.....#.#...#...............#...#  ',
        '  #############.#.#.###.###################  ',
        '               A O F   N                     ',
        '               A A D   M                     '
    ]

def test_solve_single(puzzle_input, puzzle_input2):
    assert subject.solve_single(puzzle_input) == 23
    assert subject.solve_single(puzzle_input2) == 58

def test_solve_nested(puzzle_input3):
    assert subject.solve_nested(puzzle_input3) == 396