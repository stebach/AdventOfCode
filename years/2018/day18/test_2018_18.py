import solve_2018_18 as subject
import pytest
import numpy as np
from io import StringIO
from copy import deepcopy

@pytest.fixture
def puzzle_input():
    return [
        '.#.#...|#.',
        '.....#|##|',
        '.|..|...#.',
        '..|#.....#',
        '#.#|||#|#|',
        '...#.||...',
        '.|....|...',
        '||...#|.#|',
        '|.||||..|.',
        '...#.|..|.'
    ]

def test_parse_lines(puzzle_input):
    assert (subject.parse_lines(puzzle_input) == [
        ['.','#','.','#','.','.','.','|','#','.'],
        ['.','.','.','.','.','#','|','#','#','|'],
        ['.','|','.','.','|','.','.','.','#','.'],
        ['.','.','|','#','.','.','.','.','.','#'],
        ['#','.','#','|','|','|','#','|','#','|'],
        ['.','.','.','#','.','|','|','.','.','.'],
        ['.','|','.','.','.','.','|','.','.','.'],
        ['|','|','.','.','.','#','|','.','#','|'],
        ['|','.','|','|','|','|','.','.','|','.'],
        ['.','.','.','#','.','|','.','.','|','.']
    ]).all()

def test_count_surrounding(puzzle_input):
    data = subject.parse_lines(puzzle_input)
    assert subject.count_surrounding(data, 0,0) == {
        '.':2,
        '#':1,
        '|':0
    }
    assert subject.count_surrounding(data, 1,1) == {
        '.':6,
        '#':1,
        '|':1
    }
    assert subject.count_surrounding(data, 9,9) == {
        '.':1,
        '#':0,
        '|':2
    }

def test_progress_minutes(puzzle_input):
    data = subject.parse_lines(puzzle_input)

    assert (subject.progress_minutes(deepcopy(data),1) == [
        ['.','.','.','.','.','.','.','#','#','.'],
        ['.','.','.','.','.','.','|','#','#','#'],
        ['.','|','.','.','|','.','.','.','#','.'],
        ['.','.','|','#','|','|','.','.','.','#'],
        ['.','.','#','#','|','|','.','|','#','|'],
        ['.','.','.','#','|','|','|','|','.','.'],
        ['|','|','.','.','.','|','|','|','.','.'],
        ['|','|','|','|','|','.','|','|','.','|'],
        ['|','|','|','|','|','|','|','|','|','|'],
        ['.','.','.','.','|','|','.','.','|','.'],
    ]).all()
    assert (subject.progress_minutes(deepcopy(data),2) == [
        ['.','.','.','.','.','.','.','#','.','.'],
        ['.','.','.','.','.','.','|','#','.','.'],
        ['.','|','.','|','|','|','.','.','.','.'],
        ['.','.','#','#','|','|','|','.','.','#'],
        ['.','.','#','#','#','|','|','|','#','|'],
        ['.','.','.','#','|','|','|','|','|','.'],
        ['|','|','|','|','|','|','|','|','|','.'],
        ['|','|','|','|','|','|','|','|','|','|'],
        ['|','|','|','|','|','|','|','|','|','|'],
        ['.','|','|','|','|','|','|','|','|','|'],
    ]).all()
    assert (subject.progress_minutes(deepcopy(data),3) == [
        ['.','.','.','.','.','.','.','#','.','.'],
        ['.','.','.','.','|','|','|','#','.','.'],
        ['.','|','.','|','|','|','|','.','.','.'],
        ['.','.','#','#','#','|','|','|','.','#'],
        ['.','.','.','#','#','|','|','|','#','|'],
        ['.','|','|','#','#','|','|','|','|','|'],
        ['|','|','|','|','|','|','|','|','|','|'],
        ['|','|','|','|','|','|','|','|','|','|'],
        ['|','|','|','|','|','|','|','|','|','|'],
        ['|','|','|','|','|','|','|','|','|','|'],
    ]).all()
    assert (subject.progress_minutes(deepcopy(data),4) == [
        ['.','.','.','.','.','|','.','#','.','.'],
        ['.','.','.','|','|','|','|','#','.','.'],
        ['.','|','.','#','|','|','|','|','.','.'],
        ['.','.','#','#','#','|','|','|','|','#'],
        ['.','.','.','#','#','#','|','|','#','|'],
        ['|','|','|','#','#','|','|','|','|','|'],
        ['|','|','|','|','|','|','|','|','|','|'],
        ['|','|','|','|','|','|','|','|','|','|'],
        ['|','|','|','|','|','|','|','|','|','|'],
        ['|','|','|','|','|','|','|','|','|','|'],
    ]).all()
    assert (subject.progress_minutes(deepcopy(data),5) == [
        ['.','.','.','.','|','|','|','#','.','.'],
        ['.','.','.','|','|','|','|','#','.','.'],
        ['.','|','.','#','#','|','|','|','|','.'],
        ['.','.','#','#','#','#','|','|','|','#'],
        ['.','|','.','#','#','#','|','|','#','|'],
        ['|','|','|','#','#','#','|','|','|','|'],
        ['|','|','|','|','|','|','|','|','|','|'],
        ['|','|','|','|','|','|','|','|','|','|'],
        ['|','|','|','|','|','|','|','|','|','|'],
        ['|','|','|','|','|','|','|','|','|','|'],
    ]).all()
    assert (subject.progress_minutes(deepcopy(data),6) == [
        ['.','.','.','|','|','|','|','#','.','.'],
        ['.','.','.','|','|','|','|','#','.','.'],
        ['.','|','.','#','#','#','|','|','|','.'],
        ['.','.','#','.','#','#','|','|','|','#'],
        ['|','|','|','#','.','#','#','|','#','|'],
        ['|','|','|','#','#','#','|','|','|','|'],
        ['|','|','|','|','#','|','|','|','|','|'],
        ['|','|','|','|','|','|','|','|','|','|'],
        ['|','|','|','|','|','|','|','|','|','|'],
        ['|','|','|','|','|','|','|','|','|','|'],
    ]).all()
    assert (subject.progress_minutes(deepcopy(data),7) == [
        ['.','.','.','|','|','|','|','#','.','.'],
        ['.','.','|','|','#','|','#','#','.','.'],
        ['.','|','.','#','#','#','#','|','|','.'],
        ['|','|','#','.','.','#','#','|','|','#'],
        ['|','|','#','#','.','#','#','|','#','|'],
        ['|','|','|','#','#','#','#','|','|','|'],
        ['|','|','|','#','#','#','|','|','|','|'],
        ['|','|','|','|','|','|','|','|','|','|'],
        ['|','|','|','|','|','|','|','|','|','|'],
        ['|','|','|','|','|','|','|','|','|','|'],
    ]).all()
    assert (subject.progress_minutes(deepcopy(data),8) == [
        ['.','.','|','|','|','|','#','#','.','.'],
        ['.','.','|','#','#','#','#','#','.','.'],
        ['|','|','|','#','#','#','#','#','|','.'],
        ['|','|','#','.','.','.','#','#','|','#'],
        ['|','|','#','#','.','.','#','#','#','|'],
        ['|','|','#','#','.','#','#','#','|','|'],
        ['|','|','|','#','#','#','#','|','|','|'],
        ['|','|','|','|','#','|','|','|','|','|'],
        ['|','|','|','|','|','|','|','|','|','|'],
        ['|','|','|','|','|','|','|','|','|','|'],
    ]).all()
    assert (subject.progress_minutes(deepcopy(data),9) == [
        ['.','.','|','|','#','#','#','.','.','.'],
        ['.','|','|','#','#','#','#','#','.','.'],
        ['|','|','#','#','.','.','.','#','#','.'],
        ['|','|','#','.','.','.','.','#','#','#'],
        ['|','#','#','.','.','.','.','#','#','|'],
        ['|','|','#','#','.','.','#','#','#','|'],
        ['|','|','#','#','#','#','#','#','|','|'],
        ['|','|','|','#','#','#','|','|','|','|'],
        ['|','|','|','|','|','|','|','|','|','|'],
        ['|','|','|','|','|','|','|','|','|','|'],
    ]).all()
    assert (subject.progress_minutes(deepcopy(data),10) == [
        ['.','|','|','#','#','.','.','.','.','.'],
        ['|','|','#','#','#','.','.','.','.','.'],
        ['|','|','#','#','.','.','.','.','.','.'],
        ['|','#','#','.','.','.','.','.','#','#'],
        ['|','#','#','.','.','.','.','.','#','#'],
        ['|','#','#','.','.','.','.','#','#','|'],
        ['|','|','#','#','.','#','#','#','#','|'],
        ['|','|','#','#','#','#','#','|','|','|'],
        ['|','|','|','|','#','|','|','|','|','|'],
        ['|','|','|','|','|','|','|','|','|','|'],
    ]).all()

def test_part1_example1(puzzle_input):
    data = subject.parse_lines(puzzle_input)
    assert subject.part1(data, 10) == 1147

