import solve_{{year}}_{{day}} as subject
import pytest

@pytest.mark.skip(reason="not yet implemented")
def test_part1_example1():
    puzzle_input = [1,2,3]
    assert subject.part1(puzzle_input) == 1

@pytest.mark.skip(reason="not yet implemented")
def test_part1_example2():
    puzzle_input = [1,2,3]
    assert subject.part1(puzzle_input) == 1

@pytest.mark.skip(reason="not yet implemented")
def test_part1_example3():
    puzzle_input = [1,2,3]
    assert subject.part1(puzzle_input) == 1

@pytest.mark.skip(reason="not yet implemented")
def test_part1_example4():
    puzzle_input = [1,2,3]
    assert subject.part1(puzzle_input) == 1

@pytest.mark.skip(reason="not yet implemented")
def test_part2_example1():
    puzzle_input = [1,2,3]
    assert subject.part2(puzzle_input) == 1

@pytest.mark.skip(reason="not yet implemented")
def test_part2_example2():
    puzzle_input = [1,2,3]
    assert subject.part2(puzzle_input) == 1

@pytest.mark.skip(reason="not yet implemented")
def test_part2_example3():
    puzzle_input = [1,2,3]
    assert subject.part2(puzzle_input) == 1

@pytest.mark.skip(reason="not yet implemented")
def test_part2_example4():
    puzzle_input = [1,2,3]
    assert subject.part2(puzzle_input) == 1

